/* automatically generated by rust-bindgen 0.59.2 */

pub const __BITS_PER_LONG: u32 = 64;
pub const __FD_SETSIZE: u32 = 1024;
pub const UDP_CORK: u32 = 1;
pub const UDP_ENCAP: u32 = 100;
pub const UDP_NO_CHECK6_TX: u32 = 101;
pub const UDP_NO_CHECK6_RX: u32 = 102;
pub const UDP_SEGMENT: u32 = 103;
pub const UDP_GRO: u32 = 104;
pub const UDP_ENCAP_ESPINUDP_NON_IKE: u32 = 1;
pub const UDP_ENCAP_ESPINUDP: u32 = 2;
pub const UDP_ENCAP_L2TPINUDP: u32 = 3;
pub const UDP_ENCAP_GTP0: u32 = 4;
pub const UDP_ENCAP_GTP1U: u32 = 5;
pub const UDP_ENCAP_RXRPC: u32 = 6;
pub const TCP_ENCAP_ESPINTCP: u32 = 7;
pub type __s8 = i8;
pub type __u8 = u8;
pub type __s16 = i16;
pub type __u16 = u16;
pub type __s32 = i32;
pub type __u32 = u32;
pub type __s64 = i64;
pub type __u64 = u64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __kernel_fd_set {
    pub fds_bits: [u64; 16usize],
}
pub type __kernel_sighandler_t =
    ::core::option::Option<unsafe extern "C" fn(arg1: i32)>;
pub type __kernel_key_t = i32;
pub type __kernel_mqd_t = i32;
pub type __kernel_old_uid_t = u16;
pub type __kernel_old_gid_t = u16;
pub type __kernel_old_dev_t = u64;
pub type __kernel_long_t = i64;
pub type __kernel_ulong_t = u64;
pub type __kernel_ino_t = __kernel_ulong_t;
pub type __kernel_mode_t = u32;
pub type __kernel_pid_t = i32;
pub type __kernel_ipc_pid_t = i32;
pub type __kernel_uid_t = u32;
pub type __kernel_gid_t = u32;
pub type __kernel_suseconds_t = __kernel_long_t;
pub type __kernel_daddr_t = i32;
pub type __kernel_uid32_t = u32;
pub type __kernel_gid32_t = u32;
pub type __kernel_size_t = __kernel_ulong_t;
pub type __kernel_ssize_t = __kernel_long_t;
pub type __kernel_ptrdiff_t = __kernel_long_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __kernel_fsid_t {
    pub val: [i32; 2usize],
}
pub type __kernel_off_t = __kernel_long_t;
pub type __kernel_loff_t = i64;
pub type __kernel_old_time_t = __kernel_long_t;
pub type __kernel_time_t = __kernel_long_t;
pub type __kernel_time64_t = i64;
pub type __kernel_clock_t = __kernel_long_t;
pub type __kernel_timer_t = i32;
pub type __kernel_clockid_t = i32;
pub type __kernel_caddr_t = *mut i8;
pub type __kernel_uid16_t = u16;
pub type __kernel_gid16_t = u16;
pub type __le16 = __u16;
pub type __be16 = __u16;
pub type __le32 = __u32;
pub type __be32 = __u32;
pub type __le64 = __u64;
pub type __be64 = __u64;
pub type __sum16 = __u16;
pub type __wsum = __u32;
pub type __poll_t = u32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct udphdr {
    pub source: __be16,
    pub dest: __be16,
    pub len: __be16,
    pub check: __sum16,
}
